Q4
from collections import Counter

def calculate_statistics(numbers):
    # calculate sum
    total = sum(numbers)
    
    # calculate mean
    mean = total / len(numbers)
    
    # calculate median
    sorted_numbers = sorted(numbers)
    n = len(sorted_numbers)
    if n % 2 == 0:
        median = (sorted_numbers[n//2-1] + sorted_numbers[n//2]) / 2
    else:
        median = sorted_numbers[n//2]
    
    # calculate mode
    counter = Counter(numbers)
    mode = [k for k, v in counter.items() if v == max(counter.values())]
    
    # display result
    print("List of numbers:", numbers)
    print("Sum:", total)
    print("Mean:", mean)
    print("Median:", median)
    print("Mode:", mode)

Q5:
def find_duplicates(lst):
    duplicates = []
    for i in range(len(lst)):
        for j in range(i + 1, len(lst)):
            if lst[i] == lst[j] and lst[i] not in duplicates:
                duplicates.append(lst[i])
    return duplicates


Q6:
# Step 1
a = [1, 3, 5]
b = [2, 4, 6]

# Step 2
c = a + b

# Step 3
d = sorted(c)

# Step 4
d.reverse()

# Step 5
c[3] = 42

# Step 6
d.append(10)

# Step 7
c.extend([7, 8, 9])

# Step 8
print(c[:3])

# Step 9
print(d[-1])

# Step 10
print(len(d))


Q7:
# Step 1
a = [(1,), (2, 3), (4, 5, 6)]

# Step 2
print(a[1][1])

# Step 3
b = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]

# Step 4
print(b[0][-2:])


Q8:
# Step 1
calendar = []
for month in range(12):
    month_data = []
    for week in range(4):
        month_data.append([])
    calendar.append(month_data)

# Step 2
calendar_by_month = {
    'January': calendar[0],
    'February': calendar[1],
    'March': calendar[2],
    'April': calendar[3],
    'May': calendar[4],
    'June': calendar[5],
    'July': calendar[6],
    'August': calendar[7],
    'September': calendar[8],
    'October': calendar[9],
    'November': calendar[10],
    'December': calendar[11]
}

july_week_2 = calendar_by_month['July'][1]
july_week_2.append('Independence Day')

print(calendar_by_month['July'][1])
